data:
  requestsCpu: "5m"
  requestsMemory: "275Mi"
  limitsCpu: "1"
  limitsMemory: "1G"
  imagePullPolicy: "IfNotPresent"
  image: "registry.k8s.local/x-app:latest"
  replicas: 1

configData:
  log-level: DEBUG

plainSecretData:
  redis-password: my_password

envs:
  fromConfig:
    - envName: LOG_LEVEL
      configKey: log-level
  fromSecret:
    - envName: REDIS_PASSWORD
      secretKey: redis-password

externalSecret:
  enabled: false
  storeName: "vault-backend"
  storeKind: "ClusterSecretStore"
  refreshInterval: "15s"
  data:
    - secretKey: "redis-password"
      remoteRefKey: "secret/data/x-app"
      remoteRefProperty: "redis-password"

conf:
  appName: "x-app"
  serviceName: "x-app"
  serviceAccountName: "x-app"
  configMapName: "x-app-config"
  secretName: "x-app-secret"
  limitsEnabled: true
  port: 8080
  healthCheckUrl: /actuator/health

deployment:
  imagePullSecrets: []
  podSecurityContext: {}
  containerSecurityContext: {}
  # Additional volumes on the output Deployment definition.
  volumes: [ ]
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: [ ]
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: { }

  tolerations: [ ]

  affinity: { }

istio:
  enabled: false
  gateway: "service-gateway"
  host: "x-app.k8s.local"
  uriPrefix: "/api/v1/x-app"

autoscaling:
  enabled: false
  prometheusServerAddress:
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 90
  targetMemoryUtilizationPercentage: 90
  serviceRequestCountThreshold: 35
  serviceRequestDurationAverage: 500
  coolDownPeriod: 120
  pollingInterval: 1